sap.ui.define(
	[
		"sap/ui/core/mvc/Controller",
		"sap/ui/model/Filter",
		"sap/ui/model/FilterOperator"
	],
	function(Controller, Filter, FilterOperator) {
		"use strict";
		return Controller.extend("ProductsProducts.controller.List", {
			/**
			 * Called when a controller is instantiated and its View controls (if available) are already created.
			 * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.
			 * @memberOf ProductsProducts.view.List
			 */ //	onInit: function() {
			//
			//	},
			/**
			 * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered
			 * (NOT before the first rendering! onInit() is used for that one!).
			 * @memberOf ProductsProducts.view.List
			 */ //	onBeforeRendering: function() {
			//
			//	},
			/**
			 * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.
			 * This hook is the same one that SAPUI5 controls get after being rendered.
			 * @memberOf ProductsProducts.view.List
			 */ //	onAfterRendering: function() {
			//
			//	},
			/**
			 * Called when the Controller is destroyed. Use this one to free resources and finalize activities.
			 * @memberOf ProductsProducts.view.List
			 */ //	onExit: function() {
			//
			//	}
			/**
			 *@memberOf ProductsProducts.controller.List
			 */
			onSearchProduct: function(oEvent) {
				//This code was generated by the layout editor.

				// build filter array
				//var aFilter = [];

				// var sQuery = oEvent.getParameter("query");
				// if (sQuery) {
				// 	aFilter.push(new Filter("ProductName", FilterOperator.Contains, sQuery));
				// }

				var vProductID = this.getView().byId("inputProductID").getValue();
				var vProductDesc = this.getView().byId("inputProductDesc").getValue();

				if (vProductDesc !== "" || vProductID !== "") {
					var aFilter =
						new Filter({
							filters: [
								new Filter({
									path: "ProductID",
									operator: FilterOperator.EQ,
									value1: vProductID
								}),
								new Filter({
									path: "ProductName",
									operator: FilterOperator.EQ,
									value1: vProductDesc
								})
							],
							and: false
						});
				}

				// filter binding
				var oList = this.byId("listProducts");
				var oBinding = oList.getBinding("items");
				oBinding.filter(aFilter);
			}
		});
	});